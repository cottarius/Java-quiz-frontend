# Удалите строку version — она устарела и не нужна
# version: '3'

services:
  # PostgreSQL
  db:
    image: postgres:15
    container_name: db-q
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: java_quiz
      TZ: Europe/Moscow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped
    # Добавьте healthcheck для корректной работы depends_on
  #   healthcheck:
  #     disable: true
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Backend (Java)
  backend:
    image: cotarius/questions_back:0.0.6
    container_name: backend-q
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/java_quiz?ssl=false
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      TZ: Europe/Moscow
    depends_on:
      - db
    networks:
      - backend-network
      - frontend-network
    restart: unless-stopped
  #    healthcheck:
  #      disable: true
  #      test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 5
  #      start_period: 30s

  # Frontend (React)
  frontend:
    image: cotarius/questions_front:0.0.14
    container_name: frontend-q
    ports:
      - "80:80"
    depends_on:
      - backend
    #       condition: service_healthy  # Требует, чтобы backend был здоров
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: http://backend:8080
      API_BASE_URL: http://backend:8080
    networks:
      - backend-network
      - frontend-network
    platform: linux/amd64  # Важно! Сервер x86_64, ARM-образы не работают

  # Nginx (проксирование, SSL)
  nginx:
    image: nginx:alpine
    container_name: nginx-q
    ports:
      - "443:443"
      - "8081:80"
    #    volumes:
    #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    #      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - frontend
    networks:
      - frontend-network
      - backend-network
    restart: unless-stopped

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "uid=1000,gid=1000,mode=0755"

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
